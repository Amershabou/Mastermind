{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/amershabou/Trainings/mastermind/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/amershabou/Trainings/mastermind/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/amershabou/Trainings/mastermind/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/amershabou/Trainings/mastermind/pages/mastermind.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css';\n\nvar matermind = function matermind() {\n  _s();\n\n  var _useState = useState(4),\n      combination = _useState[0],\n      setCombination = _useState[1];\n\n  var _useState2 = useState(false),\n      newGame = _useState2[0],\n      setNewGame = _useState2[1];\n\n  var _useState3 = useState([]),\n      random = _useState3[0],\n      setRandom = _useState3[1];\n\n  var _useState4 = useState([]),\n      response = _useState4[0],\n      setResponse = _useState4[1];\n\n  var _useState5 = useState([]),\n      responseHistory = _useState5[0],\n      setResponseHistory = _useState5[1];\n\n  var _useState6 = useState([]),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState([10]),\n      gusses = _useState7[0],\n      setGuesses = _useState7[1];\n\n  var isMounted = useRef(false);\n  var res = useRef([\"\", \"\", \"\", \"\"]);\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var result, number;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isMounted.current) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 3;\n            return axios(\"https://www.random.org/integers/?num=\".concat(combination, \"&min=0&max=7&col=1&base=10&format=plain&rnd=new\"));\n\n          case 3:\n            result = _context.sent;\n            number = result.data.split(\"\").filter(function (num, key) {\n              return key % 2 === 0;\n            }).map(function (num) {\n              return Number(num);\n            });\n            setRandom(number);\n            res.current = [\"\", \"\", \"\", \"\"];\n            setResponse(res.current);\n            setResponseHistory([]);\n            setGuesses([]);\n            setNewGame(false);\n            console.log(random);\n            _context.next = 15;\n            break;\n\n          case 14:\n            isMounted.current = true;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [newGame]);\n\n  var handleChange = function handleChange(e) {\n    var newNum = Number(e.target.value);\n    var id = e.target.id;\n    res.current[id] = newNum;\n    setResponse(res.current);\n    console.log(response);\n  };\n\n  var checkIfMatch = function checkIfMatch(e) {\n    e.preventDefault();\n    if (res.current.includes(\"\")) return;\n    setResponseHistory(function (responseHistory) {\n      return [].concat(_toConsumableArray(responseHistory), [response]);\n    });\n    setGuesses(gusses - 1);\n    Array.from(document.querySelectorAll(\"input\")).forEach(function (input) {\n      return input.value = \"\";\n    });\n    var newMessage = \"\";\n\n    if (areEqual(random, response)) {\n      newMessage = \"Congratulations! If have gussed all the numbers and won the game!!!\";\n    } else {\n      if (compare(random, response)[0]) {\n        newMessage = \"You have guessed a current number and its current locartion\";\n      } else if (compare(random, response)[1]) {\n        newMessage = \"You have guessed a current number\";\n      } else {\n        newMessage = \"Sorry! Your guess isn't correct, you have \".concat(gusses, \" guesses left\");\n      }\n    }\n\n    setMessages(function (messages) {\n      return [].concat(_toConsumableArray(messages), [newMessage]);\n    });\n    res.current = res.current.map(function (num) {\n      return num = \"\";\n    });\n    setResponse(res.current);\n  };\n\n  var areEqual = function areEqual(random, response) {\n    if (random.join(\"\") === response.join(\"\")) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var compare = function compare(num1, num2) {\n    var samePos = false;\n    var foundNum = false;\n\n    for (var i = 0; i < num1.length; i++) {\n      for (var j = 0; j < num2.length; j++) {\n        if (i === j && num1[i] === num2[j]) {\n          return [samePos, foundNum];\n        } else if (num1[i] === num2[j]) {\n          return [samePos, foundNum];\n        }\n      }\n    }\n\n    return [samePos, foundNum];\n  };\n\n  var allNumbers = [0, 1, 2, 3, 4, 5, 6, 7];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.game,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: function onClick() {\n        setNewGame(true);\n      },\n      children: \"Start the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: [gusses, \" guesses left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.numbersBox,\n        children: Array.from(Array(combination)).map(function (x, i) {\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            id: i,\n            onChange: handleChange,\n            className: styles.number\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 59\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.guessSubmit,\n        onClick: checkIfMatch,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.numbersBox,\n        children: responseHistory.map(function (x, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: i,\n              className: styles.number,\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 49\n            }, _this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: messages[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 108\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 44\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, _this);\n};\n\n_s(matermind, \"7lstUqQdkQs3exYk2tRDayn1my4=\");\n\nexport default matermind;","map":{"version":3,"sources":["/Users/amershabou/Trainings/mastermind/pages/mastermind.js"],"names":["React","useState","useEffect","useRef","axios","styles","matermind","combination","setCombination","newGame","setNewGame","random","setRandom","response","setResponse","responseHistory","setResponseHistory","messages","setMessages","gusses","setGuesses","isMounted","res","current","result","number","data","split","filter","num","key","map","Number","console","log","handleChange","e","newNum","target","value","id","checkIfMatch","preventDefault","includes","Array","from","document","querySelectorAll","forEach","input","newMessage","areEqual","compare","join","num1","num2","samePos","foundNum","i","length","j","allNumbers","game","button","body","numbersBox","x","guessSubmit"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACkBL,QAAQ,CAAC,CAAD,CAD1B;AAAA,MACbM,WADa;AAAA,MACAC,cADA;;AAAA,mBAEUP,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEbQ,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAGQT,QAAQ,CAAC,EAAD,CAHhB;AAAA,MAGbU,MAHa;AAAA,MAGLC,SAHK;;AAAA,mBAIYX,QAAQ,CAAC,EAAD,CAJpB;AAAA,MAIbY,QAJa;AAAA,MAIHC,WAJG;;AAAA,mBAK0Bb,QAAQ,CAAC,EAAD,CALlC;AAAA,MAKbc,eALa;AAAA,MAKIC,kBALJ;;AAAA,mBAMYf,QAAQ,CAAC,EAAD,CANpB;AAAA,MAMbgB,QANa;AAAA,MAMHC,WANG;;AAAA,mBAOSjB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAPjB;AAAA,MAObkB,MAPa;AAAA,MAOLC,UAPK;;AASpB,MAAMC,SAAS,GAAGlB,MAAM,CAAC,KAAD,CAAxB;AACA,MAAMmB,GAAG,GAAGnB,MAAM,CAAC,CAAC,EAAD,EAAK,EAAL,EAAQ,EAAR,EAAW,EAAX,CAAD,CAAlB;AACAD,EAAAA,SAAS,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACHmB,SAAS,CAACE,OADP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEkBnB,KAAK,gDACkBG,WADlB,qDAFvB;;AAAA;AAEGiB,YAAAA,MAFH;AAKGC,YAAAA,MALH,GAKYD,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,EAAlB,EAAsBC,MAAtB,CAA6B,UAACC,GAAD,EAAMC,GAAN;AAAA,qBAAcA,GAAG,GAAG,CAAN,KAAY,CAA1B;AAAA,aAA7B,EAA0DC,GAA1D,CAA8D,UAACF,GAAD;AAAA,qBAASG,MAAM,CAACH,GAAD,CAAf;AAAA,aAA9D,CALZ;AAMDjB,YAAAA,SAAS,CAACa,MAAD,CAAT;AACAH,YAAAA,GAAG,CAACC,OAAJ,GAAc,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAAd;AACAT,YAAAA,WAAW,CAACQ,GAAG,CAACC,OAAL,CAAX;AACAP,YAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAI,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAV,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAuB,YAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AAZC;AAAA;;AAAA;AAcHU,YAAAA,SAAS,CAACE,OAAV,GAAmB,IAAnB;;AAdG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,IAiBP,CAACd,OAAD,CAjBO,CAAT;;AAoBA,MAAM0B,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxB,QAAIC,MAAM,GAAGL,MAAM,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnB;AACA,QAAIC,EAAE,GAAGJ,CAAC,CAACE,MAAF,CAASE,EAAlB;AACAlB,IAAAA,GAAG,CAACC,OAAJ,CAAYiB,EAAZ,IAAkBH,MAAlB;AACAvB,IAAAA,WAAW,CAACQ,GAAG,CAACC,OAAL,CAAX;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AAGH,GARD;;AAUA,MAAM4B,YAAY,GAAG,SAAfA,YAAe,CAACL,CAAD,EAAM;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIpB,GAAG,CAACC,OAAJ,CAAYoB,QAAZ,CAAqB,EAArB,CAAJ,EAA8B;AAC9B3B,IAAAA,kBAAkB,CAAC,UAAAD,eAAe;AAAA,0CAAQA,eAAR,IAAyBF,QAAzB;AAAA,KAAhB,CAAlB;AACAO,IAAAA,UAAU,CAACD,MAAM,GAAG,CAAV,CAAV;AACAyB,IAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX,EAA+CC,OAA/C,CACI,UAAAC,KAAK;AAAA,aAAKA,KAAK,CAACV,KAAN,GAAc,EAAnB;AAAA,KADT;AAGA,QAAIW,UAAU,GAAG,EAAjB;;AACA,QAAIC,QAAQ,CAACxC,MAAD,EAASE,QAAT,CAAZ,EAA+B;AAC3BqC,MAAAA,UAAU,GAAG,qEAAb;AACH,KAFD,MAEO;AACH,UAAIE,OAAO,CAACzC,MAAD,EAASE,QAAT,CAAP,CAA0B,CAA1B,CAAJ,EAAiC;AAC7BqC,QAAAA,UAAU,GAAG,6DAAb;AACH,OAFD,MAEO,IAAIE,OAAO,CAACzC,MAAD,EAASE,QAAT,CAAP,CAA0B,CAA1B,CAAJ,EAAkC;AACrCqC,QAAAA,UAAU,GAAG,mCAAb;AACH,OAFM,MAEA;AACHA,QAAAA,UAAU,uDAA+C/B,MAA/C,kBAAV;AACH;AACJ;;AAEDD,IAAAA,WAAW,CAAC,UAAAD,QAAQ;AAAA,0CAAQA,QAAR,IAAkBiC,UAAlB;AAAA,KAAT,CAAX;AACA5B,IAAAA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACC,OAAJ,CAAYQ,GAAZ,CAAgB,UAAAF,GAAG;AAAA,aAAIA,GAAG,GAAG,EAAV;AAAA,KAAnB,CAAd;AACAf,IAAAA,WAAW,CAACQ,GAAG,CAACC,OAAL,CAAX;AAEH,GAzBD;;AA0BA,MAAM4B,QAAQ,GAAG,SAAXA,QAAW,CAACxC,MAAD,EAASE,QAAT,EAAsB;AACnC,QAAIF,MAAM,CAAC0C,IAAP,CAAY,EAAZ,MAAoBxC,QAAQ,CAACwC,IAAT,CAAc,EAAd,CAAxB,EAA2C;AACvC,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAND;;AAOA,MAAMD,OAAO,GAAG,SAAVA,OAAU,CAACE,IAAD,EAAOC,IAAP,EAAgB;AAC5B,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,QAAQ,GAAG,KAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACJ,IAAI,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACL,IAAI,CAACI,MAAvB,EAA+BC,CAAC,EAAhC,EAAmC;AAC/B,YAAIF,CAAC,KAAKE,CAAN,IAAWN,IAAI,CAACI,CAAD,CAAJ,KAAYH,IAAI,CAACK,CAAD,CAA/B,EAAmC;AAC/B,iBAAO,CAACJ,OAAD,EAASC,QAAT,CAAP;AACH,SAFD,MAEO,IAAIH,IAAI,CAACI,CAAD,CAAJ,KAAYH,IAAI,CAACK,CAAD,CAApB,EAAyB;AAC5B,iBAAO,CAACJ,OAAD,EAASC,QAAT,CAAP;AACH;AACJ;AACJ;;AACD,WAAO,CAACD,OAAD,EAASC,QAAT,CAAP;AACH,GAbD;;AAcA,MAAMI,UAAU,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAnB;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAExD,MAAM,CAACyD,IAAvB;AAAA,4BACR;AAAQ,MAAA,SAAS,EAAEzD,MAAM,CAAC0D,MAA1B;AAAkC,MAAA,OAAO,EAAE,mBAAI;AAACrD,QAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADQ,eAER;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACKS,MADL;AAAA;AAAA;AAAA;AAAA;AAAA,aAFQ,eAKR;AAAK,MAAA,SAAS,EAAEd,MAAM,CAAC2D,IAAvB;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE3D,MAAM,CAAC4D,UAAxB;AAAA,kBACKrB,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACrC,WAAD,CAAhB,EAA+BwB,GAA/B,CAAmC,UAACmC,CAAD,EAAIR,CAAJ;AAAA,8BAAU;AAAQ,YAAA,EAAE,EAAGA,CAAb;AAAwB,YAAA,QAAQ,EAAIvB,YAApC;AAAkD,YAAA,SAAS,EAAE9B,MAAM,CAACoB;AAApE,aAAqBiC,CAArB;AAAA;AAAA;AAAA;AAAA,mBAAV;AAAA,SAAnC;AADL;AAAA;AAAA;AAAA;AAAA,eADJ,eAMI;AAAQ,QAAA,SAAS,EAAIrD,MAAM,CAAC8D,WAA5B;AAAyC,QAAA,OAAO,EAAI1B,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ;AAAA;AAAA;AAAA;AAAA;AAAA,aALQ,eAaR;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAAC2D,IAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE3D,MAAM,CAAC4D,UAAvB;AAAA,kBACKlD,eAAe,CAACgB,GAAhB,CAAoB,UAACmC,CAAD,EAAIR,CAAJ;AAAA,8BAAU;AAAA,oCAAK;AAAM,cAAA,EAAE,EAAGA,CAAX;AAAsB,cAAA,SAAS,EAAErD,MAAM,CAACoB,MAAxC;AAAA,wBAAkDyC;AAAlD,eAAmBR,CAAnB;AAAA;AAAA;AAAA;AAAA,qBAAL,oBAAgE;AAAA,wBAAMzC,QAAQ,CAACyC,CAAD;AAAd;AAAA;AAAA;AAAA;AAAA,qBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAV;AAAA,SAApB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAbQ;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAoBH,CA7GD;;GAAMpD,S;;AA+GN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css'\n\n\nconst matermind = () => {\n    const [combination, setCombination] = useState(4)\n    const [newGame, setNewGame] = useState(false);\n    const [random, setRandom] = useState([]);\n    const [response, setResponse] = useState([]);\n    const [responseHistory, setResponseHistory] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [gusses, setGuesses] = useState([10]);\n\n    const isMounted = useRef(false);\n    const res = useRef([\"\", \"\",\"\",\"\"]);\n    useEffect( async ()=> {\n        if (isMounted.current){\n            const result = await axios(\n                `https://www.random.org/integers/?num=${combination}&min=0&max=7&col=1&base=10&format=plain&rnd=new`,\n              );\n              let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map((num) => Number(num));\n              setRandom(number);\n              res.current = [\"\",\"\",\"\",\"\"]\n              setResponse(res.current);\n              setResponseHistory([]);\n              setGuesses([]);\n              setNewGame(false)\n              console.log(random)\n        } else {\n            isMounted.current= true;\n        }\n        \n    },[newGame])\n    \n    \n    const handleChange = (e) => {\n        let newNum = Number(e.target.value);\n        let id = e.target.id;\n        res.current[id] = newNum;  \n        setResponse(res.current);\n        console.log(response)\n\n        \n    }\n\n    const checkIfMatch = (e)=> {\n        e.preventDefault();\n        if (res.current.includes(\"\")) return;\n        setResponseHistory(responseHistory => [...responseHistory, response]);\n        setGuesses(gusses - 1)\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n        let newMessage = \"\";\n        if (areEqual(random, response)){\n            newMessage = \"Congratulations! If have gussed all the numbers and won the game!!!\";\n        } else {\n            if (compare(random, response)[0]){\n                newMessage = \"You have guessed a current number and its current locartion\";\n            } else if (compare(random, response)[1]) {\n                newMessage = \"You have guessed a current number\";\n            } else {\n                newMessage= `Sorry! Your guess isn't correct, you have ${gusses} guesses left`;\n            }\n        }\n        \n        setMessages(messages => [...messages, newMessage])\n        res.current = res.current.map(num => num = \"\")\n        setResponse(res.current)\n\n    }\n    const areEqual = (random, response) => {\n        if (random.join(\"\") === response.join(\"\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const compare = (num1, num2) => {\n        let samePos = false;\n        let foundNum = false;\n        for (let i = 0; i<num1.length; i++){\n            for (let j = 0; j<num2.length; j++){\n                if (i === j && num1[i] === num2[j]){\n                    return [samePos,foundNum]\n                } else if (num1[i] === num2[j]) {\n                    return [samePos,foundNum]\n                }\n            }\n        }\n        return [samePos,foundNum]\n    }\n    const allNumbers = [0,1,2,3,4,5,6,7]\n    return (<div className={styles.game}>\n    <button className={styles.button} onClick={()=>{setNewGame(true)}}>Start the Game</button>\n    <div className=\"help\">\n        {gusses} guesses left\n      </div>\n    <div className={styles.body}>\n        <form className={styles.numbersBox}>\n            {Array.from(Array(combination)).map((x, i) => <input  id ={i} key={i} onChange = {handleChange} className={styles.number} ></input>)}\n\n        </form>\n\n        <button className = {styles.guessSubmit} onClick = {checkIfMatch} >Submit Guess</button>\n    </div>\n    <div className={styles.body}>\n        <div className={styles.numbersBox}>\n            {responseHistory.map((x, i) => <div><div  id ={i} key={i} className={styles.number} >{x}</div> <div>{messages[i]}</div></div>)}\n\n        </div>\n    </div>\n    </div>)\n}\n\nexport default matermind;"]},"metadata":{},"sourceType":"module"}