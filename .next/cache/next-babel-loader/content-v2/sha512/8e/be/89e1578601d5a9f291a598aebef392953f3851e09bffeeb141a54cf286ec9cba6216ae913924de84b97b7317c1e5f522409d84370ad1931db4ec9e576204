{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amershabou/Trainings/mastermind/pages/mastermind.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from 'next/router';\nimport styles from './styles.module.css';\n\nconst matermind = () => {\n  const combination = 4;\n  const {\n    0: newGame,\n    1: setNewGame\n  } = useState(false);\n  const {\n    0: random,\n    1: setRandom\n  } = useState([]);\n  const {\n    0: response,\n    1: setResponse\n  } = useState([]);\n  const {\n    0: responseHistory,\n    1: setResponseHistory\n  } = useState([]);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: gusses,\n    1: setGuesses\n  } = useState([10]);\n  const isMounted = useRef(false);\n  const res = useRef([\"\", \"\", \"\", \"\"]);\n  useEffect(async () => {\n    if (isMounted.current) {\n      const result = await axios(`https://www.random.org/integers/?num=${combination}&min=0&max=7&col=1&base=10&format=plain&rnd=new`);\n      let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map(num => Number(num));\n      setRandom(number);\n      res.current = [\"\", \"\", \"\", \"\"];\n      setResponse(res.current);\n      setResponseHistory([]);\n      setGuesses([10]);\n      setNewGame(false);\n      Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n      console.log(random);\n    } else {\n      isMounted.current = true;\n    }\n  }, [newGame]);\n\n  const handleChange = e => {\n    let newNum = Number(e.target.value);\n    let id = e.target.id;\n    res.current[id] = newNum;\n    setResponse(res.current);\n    console.log(response);\n  };\n\n  const checkIfMatch = e => {\n    e.preventDefault();\n    if (res.current.includes(\"\")) return;\n    setResponseHistory(responseHistory => [...responseHistory, response]);\n    setGuesses(gusses - 1);\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n    let newMessage = \"\";\n    console.log(response);\n\n    if (areEqual(random, response)) {\n      newMessage = \"Congratulations! If have gussed all the numbers and won the game!!!\";\n    } else {\n      if (compare(random, response)[0]) {\n        newMessage = \"You have guessed a current number and its current locartion\";\n      } else if (compare(random, response)[1]) {\n        newMessage = \"You have guessed a current number\";\n      } else {\n        newMessage = `Sorry! Your guess isn't correct, you have ${gusses} guesses left`;\n      }\n    }\n\n    setMessages(messages => [...messages, newMessage]);\n    res.current = res.current.map(num => num = \"\");\n    setResponse(res.current);\n  };\n\n  const areEqual = (random, response) => {\n    if (random.join(\"\") === response.join(\"\")) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const compare = (num1, num2) => {\n    let samePos = false;\n    let foundNum = false;\n\n    for (let i = 0; i < num1.length; i++) {\n      for (let j = 0; j < num2.length; j++) {\n        if (i === j && num1[i] === num2[j]) {\n          return [samePos, foundNum];\n        }\n\n        if (num1[i] === num2[j]) {\n          return [samePos, foundNum];\n        }\n      }\n    }\n\n    return [samePos, foundNum];\n  };\n\n  const allNumbers = [0, 1, 2, 3, 4, 5, 6, 7];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.game,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => {\n        setNewGame(true);\n      },\n      children: \"Start the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: [gusses, \" guesses left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.numbersBox,\n        children: Array.from(Array(combination)).map((x, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: i,\n          onChange: handleChange,\n          className: styles.number\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.guessSubmit,\n        onClick: checkIfMatch,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.numbersBox,\n        children: responseHistory.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: i,\n            className: styles.number,\n            children: x\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 49\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: messages[i]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this);\n};\n\nexport default withRouter(matermind);","map":{"version":3,"sources":["/Users/amershabou/Trainings/mastermind/pages/mastermind.js"],"names":["React","useState","useEffect","useRef","axios","withRouter","styles","matermind","combination","newGame","setNewGame","random","setRandom","response","setResponse","responseHistory","setResponseHistory","messages","setMessages","gusses","setGuesses","isMounted","res","current","result","number","data","split","filter","num","key","map","Number","Array","from","document","querySelectorAll","forEach","input","value","console","log","handleChange","e","newNum","target","id","checkIfMatch","preventDefault","includes","newMessage","areEqual","compare","join","num1","num2","samePos","foundNum","i","length","j","allNumbers","game","button","body","numbersBox","x","guessSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from 'next/router'\n\nimport styles from './styles.module.css'\n\n\nconst matermind = () => {\n    const combination = 4;\n    const [newGame, setNewGame] = useState(false);\n    const [random, setRandom] = useState([]);\n    const [response, setResponse] = useState([]);\n    const [responseHistory, setResponseHistory] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [gusses, setGuesses] = useState([10]);\n\n    const isMounted = useRef(false);\n    const res = useRef([\"\", \"\",\"\",\"\"]);\n    useEffect( async ()=> {\n        if (isMounted.current){\n            const result = await axios(\n                `https://www.random.org/integers/?num=${combination}&min=0&max=7&col=1&base=10&format=plain&rnd=new`,\n              );\n              let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map((num) => Number(num));\n              setRandom(number);\n              res.current = [\"\",\"\",\"\",\"\"]\n              setResponse(res.current);\n              setResponseHistory([]);\n              setGuesses([10]);\n              setNewGame(false)\n              Array.from(document.querySelectorAll(\"input\")).forEach(\n                input => (input.value = \"\")\n              );\n              console.log(random)\n        } else {\n            isMounted.current= true;\n        }\n        \n    },[newGame])\n    \n    \n    const handleChange = (e) => {\n        let newNum = Number(e.target.value);\n        let id = e.target.id;\n        res.current[id] = newNum;  \n        setResponse(res.current);\n        console.log(response)\n\n        \n    }\n\n    const checkIfMatch = (e)=> {\n        e.preventDefault();\n        if (res.current.includes(\"\")) return;\n        setResponseHistory(responseHistory => [...responseHistory, response]);\n        setGuesses(gusses - 1)\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n        let newMessage = \"\";\n        console.log(response)\n        if (areEqual(random, response)){\n            newMessage = \"Congratulations! If have gussed all the numbers and won the game!!!\";\n        } else {\n            if (compare(random, response)[0]){\n                newMessage = \"You have guessed a current number and its current locartion\";\n            } else if (compare(random, response)[1]) {\n                newMessage = \"You have guessed a current number\";\n            } else {\n                newMessage= `Sorry! Your guess isn't correct, you have ${gusses} guesses left`;\n            }\n        }\n        \n        setMessages(messages => [...messages, newMessage])\n        res.current = res.current.map(num => num = \"\")\n        setResponse(res.current)\n\n    }\n    const areEqual = (random, response) => {\n        if (random.join(\"\") === response.join(\"\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const compare = (num1, num2) => {\n        let samePos = false;\n        let foundNum = false;\n        for (let i = 0; i<num1.length; i++){\n            for (let j = 0; j<num2.length; j++){\n                if (i === j && num1[i] === num2[j]){\n                    return [samePos,foundNum]\n                }  \n                if (num1[i] === num2[j]) {\n                    return [samePos,foundNum]\n                }\n            }\n        }\n        return [samePos,foundNum]\n    }\n    const allNumbers = [0,1,2,3,4,5,6,7]\n    return (<div className={styles.game}>\n    <button className={styles.button} onClick={()=>{setNewGame(true)}}>Start the Game</button>\n    <div className=\"help\">\n        {gusses} guesses left\n      </div>\n    <div className={styles.body}>\n        <form className={styles.numbersBox}>\n            {Array.from(Array(combination)).map((x, i) => <input  id ={i} key={i} onChange = {handleChange} className={styles.number} ></input>)}\n\n        </form>\n\n        <button className = {styles.guessSubmit} onClick = {checkIfMatch} >Submit Guess</button>\n    </div>\n    <div className={styles.body}>\n        <div className={styles.numbersBox}>\n            {responseHistory.map((x, i) => <div><div  id ={i} key={i} className={styles.number} >{x}</div> <div key={i}>{messages[i]}</div></div>)}\n\n        </div>\n    </div>\n    </div>)\n}\n\nexport default withRouter(matermind);"]},"metadata":{},"sourceType":"module"}