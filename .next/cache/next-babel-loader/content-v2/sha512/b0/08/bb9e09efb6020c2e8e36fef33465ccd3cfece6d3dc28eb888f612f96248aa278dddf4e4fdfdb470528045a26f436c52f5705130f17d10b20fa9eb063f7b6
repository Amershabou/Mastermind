{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amershabou/Trainings/mastermind/pages/mastermind.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css';\n\nconst matermind = () => {\n  const {\n    0: combination,\n    1: setCombination\n  } = useState(4);\n  const {\n    0: newGame,\n    1: setNewGame\n  } = useState(false);\n  const {\n    0: random,\n    1: setRandom\n  } = useState([]);\n  const {\n    0: response,\n    1: setResponse\n  } = useState([]);\n  const {\n    0: responseHistory,\n    1: setResponseHistory\n  } = useState([]);\n  const {\n    0: gusses,\n    1: setGuesses\n  } = useState([]);\n  const isMounted = useRef(false);\n  const res = useRef([\"\", \"\", \"\", \"\"]);\n  useEffect(async () => {\n    if (isMounted.current) {\n      const result = await axios('https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new');\n      let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map(num => Number(num));\n      setRandom(number);\n      setResponse(res.response);\n      setResponseHistory([]);\n      setGuesses([]);\n      setNewGame(false);\n      console.log(random);\n    } else {\n      isMounted.current = true;\n    }\n  }, [newGame]);\n\n  const handleChange = e => {\n    let newNum = Number(e.target.value);\n    let id = e.target.id;\n    res.current[id] = newNum;\n  };\n\n  const checkIfMatch = e => {\n    e.preventDefault();\n    setResponse(res.current);\n    setResponseHistory(responseHistory => [response, ...responseHistory]);\n    console.log(responseHistory);\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n  };\n\n  const allNumbers = [0, 1, 2, 3, 4, 5, 6, 7];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.game,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => {\n        setNewGame(true);\n      },\n      children: \"Start the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: [10 - gusses.length, \" guesses left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.numbersBox,\n        children: Array.from(Array(combination)).map((x, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: i,\n          onChange: handleChange,\n          className: styles.number\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.guessSubmit,\n        onClick: e => checkIfMatch(e),\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\nexport default matermind;","map":{"version":3,"sources":["/Users/amershabou/Trainings/mastermind/pages/mastermind.js"],"names":["React","useState","useEffect","useRef","axios","styles","matermind","combination","setCombination","newGame","setNewGame","random","setRandom","response","setResponse","responseHistory","setResponseHistory","gusses","setGuesses","isMounted","res","current","result","number","data","split","filter","num","key","map","Number","console","log","handleChange","e","newNum","target","value","id","checkIfMatch","preventDefault","Array","from","document","querySelectorAll","forEach","input","allNumbers","game","button","length","body","numbersBox","x","i","guessSubmit"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACc,eAAD;AAAA,OAAkBC;AAAlB,MAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACgB,MAAD;AAAA,OAASC;AAAT,MAAuBjB,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAMkB,SAAS,GAAGhB,MAAM,CAAC,KAAD,CAAxB;AACA,QAAMiB,GAAG,GAAGjB,MAAM,CAAC,CAAC,EAAD,EAAK,EAAL,EAAQ,EAAR,EAAW,EAAX,CAAD,CAAlB;AACAD,EAAAA,SAAS,CAAE,YAAW;AAClB,QAAIiB,SAAS,CAACE,OAAd,EAAsB;AAClB,YAAMC,MAAM,GAAG,MAAMlB,KAAK,CACtB,uFADsB,CAA1B;AAGE,UAAImB,MAAM,GAAGD,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,EAAlB,EAAsBC,MAAtB,CAA6B,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,GAAG,CAAN,KAAY,CAAvD,EAA0DC,GAA1D,CAA+DF,GAAD,IAASG,MAAM,CAACH,GAAD,CAA7E,CAAb;AACAf,MAAAA,SAAS,CAACW,MAAD,CAAT;AACAT,MAAAA,WAAW,CAACM,GAAG,CAACP,QAAL,CAAX;AACAG,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AACL,KAXD,MAWO;AACHQ,MAAAA,SAAS,CAACE,OAAV,GAAmB,IAAnB;AACH;AAEJ,GAhBQ,EAgBP,CAACZ,OAAD,CAhBO,CAAT;;AAiBA,QAAMwB,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,MAAM,GAAGL,MAAM,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnB;AACA,QAAIC,EAAE,GAAGJ,CAAC,CAACE,MAAF,CAASE,EAAlB;AACAlB,IAAAA,GAAG,CAACC,OAAJ,CAAYiB,EAAZ,IAAkBH,MAAlB;AAGH,GAND;;AAOA,QAAMI,YAAY,GAAIL,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACA1B,IAAAA,WAAW,CAACM,GAAG,CAACC,OAAL,CAAX;AACAL,IAAAA,kBAAkB,CAACD,eAAe,IAAI,CAACF,QAAD,EAAW,GAAGE,eAAd,CAApB,CAAlB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,eAAZ;AACA0B,IAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX,EAA+CC,OAA/C,CACIC,KAAK,IAAKA,KAAK,CAACT,KAAN,GAAc,EAD5B;AAGH,GARD;;AASA,QAAMU,UAAU,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAnB;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAE1C,MAAM,CAAC2C,IAAvB;AAAA,4BACR;AAAQ,MAAA,SAAS,EAAE3C,MAAM,CAAC4C,MAA1B;AAAkC,MAAA,OAAO,EAAE,MAAI;AAACvC,QAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,eAER;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACK,KAAKO,MAAM,CAACiC,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFQ,eAKR;AAAK,MAAA,SAAS,EAAE7C,MAAM,CAAC8C,IAAvB;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE9C,MAAM,CAAC+C,UAAxB;AAAA,kBACKX,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAClC,WAAD,CAAhB,EAA+BsB,GAA/B,CAAmC,CAACwB,CAAD,EAAIC,CAAJ,kBAAU;AAAQ,UAAA,EAAE,EAAGA,CAAb;AAAwB,UAAA,QAAQ,EAAIrB,YAApC;AAAkD,UAAA,SAAS,EAAE5B,MAAM,CAACkB;AAApE,WAAqB+B,CAArB;AAAA;AAAA;AAAA;AAAA,gBAA7C;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,SAAS,EAAIjD,MAAM,CAACkD,WAA5B;AAAyC,QAAA,OAAO,EAAKrB,CAAD,IAAOK,YAAY,CAACL,CAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALQ,eAaR;AAAA;AAAA;AAAA;AAAA,YAbQ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBH,CA5DD;;AA8DA,eAAe5B,SAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css'\n\n\nconst matermind = () => {\n    const [combination, setCombination] = useState(4)\n    const [newGame, setNewGame] = useState(false);\n    const [random, setRandom] = useState([]);\n    const [response, setResponse] = useState([]);\n    const [responseHistory, setResponseHistory] = useState([]);\n    const [gusses, setGuesses] = useState([]);\n\n    const isMounted = useRef(false);\n    const res = useRef([\"\", \"\",\"\",\"\"]);\n    useEffect( async ()=> {\n        if (isMounted.current){\n            const result = await axios(\n                'https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new',\n              );\n              let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map((num) => Number(num));\n              setRandom(number);\n              setResponse(res.response);\n              setResponseHistory([]);\n              setGuesses([]);\n              setNewGame(false)\n              console.log(random)\n        } else {\n            isMounted.current= true;\n        }\n        \n    },[newGame])\n    const handleChange = (e) => {\n        let newNum = Number(e.target.value);\n        let id = e.target.id;\n        res.current[id] = newNum    \n\n        \n    }\n    const checkIfMatch = (e)=> {\n        e.preventDefault();\n        setResponse(res.current)\n        setResponseHistory(responseHistory => [response, ...responseHistory]);\n        console.log(responseHistory)\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n    }\n    const allNumbers = [0,1,2,3,4,5,6,7]\n    return (<div className={styles.game}>\n    <button className={styles.button} onClick={()=>{setNewGame(true)}}>Start the Game</button>\n    <div className=\"help\">\n        {10 - gusses.length} guesses left\n      </div>\n    <div className={styles.body}>\n        <form className={styles.numbersBox}>\n            {Array.from(Array(combination)).map((x, i) => <input  id ={i} key={i} onChange = {handleChange} className={styles.number} ></input>)}\n\n        </form>\n\n        <button className = {styles.guessSubmit} onClick = {(e) => checkIfMatch(e)} >Submit Guess</button>\n    </div>\n    <div></div>\n    {}\n    </div>)\n}\n\nexport default matermind;"]},"metadata":{},"sourceType":"module"}