{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amershabou/Trainings/mastermind/pages/mastermind.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css';\n\nconst matermind = () => {\n  const {\n    0: combination,\n    1: setCombination\n  } = useState(4);\n  const {\n    0: newGame,\n    1: setNewGame\n  } = useState(false);\n  const {\n    0: random,\n    1: setRandom\n  } = useState([]);\n  const {\n    0: response,\n    1: setResponse\n  } = useState([]);\n  const {\n    0: responseHistory,\n    1: setResponseHistory\n  } = useState([]);\n  const {\n    0: gusses,\n    1: setGuesses\n  } = useState([]);\n  const isMounted = useRef(false);\n  const res = useRef([\"\", \"\", \"\", \"\"]);\n  useEffect(async () => {\n    if (isMounted.current) {\n      const result = await axios(`https://www.random.org/integers/?num=${combination}&min=0&max=7&col=1&base=10&format=plain&rnd=new`);\n      let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map(num => Number(num));\n      setRandom(number);\n      res.current = [\"\", \"\", \"\", \"\"];\n      setResponse(res.current);\n      setResponseHistory([]);\n      setGuesses([]);\n      setNewGame(false);\n      console.log(random);\n    } else {\n      isMounted.current = true;\n    }\n  }, [newGame]);\n\n  const handleChange = e => {\n    let newNum = Number(e.target.value);\n    let id = e.target.id;\n    res.current[id] = newNum;\n    setResponse(res.current);\n    console.log(response);\n  };\n\n  const checkIfMatch = e => {\n    e.preventDefault();\n    if (res.current.includes(\"\")) return;\n    setResponseHistory(responseHistory => [...responseHistory, response]);\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n\n    if (compare(random, response)[0]) {\n      console.log(\"You have guessed a current number and its current locartion\");\n    } else if (compare(random, response)[1]) {\n      console.log(\"You have guessed a current number\");\n    } else {\n      console.log(\"Sorry! Your guess isn't correct\");\n    }\n\n    res.current = res.current.map(num => num = \"\");\n    setResponse(res.current);\n  };\n\n  const compare = (num1, num2) => {\n    let samePos = false;\n    let foundNum = false;\n\n    for (let i = 0; i < num1.length; i++) {\n      for (let j = 0; j < num2.length; j++) {\n        if (i === j && num1[i] === num2[j]) {\n          samePos = true;\n          foundNum = true;\n        } else if (num1[i] === num2[j]) {\n          foundNum = true;\n        }\n      }\n    }\n\n    return [samePos, foundNum];\n  };\n\n  const allNumbers = [0, 1, 2, 3, 4, 5, 6, 7];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.game,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => {\n        setNewGame(true);\n      },\n      children: \"Start the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: [10 - gusses.length, \" guesses left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.numbersBox,\n        children: Array.from(Array(combination)).map((x, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: i,\n          onChange: handleChange,\n          className: styles.number\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.guessSubmit,\n        onClick: checkIfMatch,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n};\n\nexport default matermind;","map":{"version":3,"sources":["/Users/amershabou/Trainings/mastermind/pages/mastermind.js"],"names":["React","useState","useEffect","useRef","axios","styles","matermind","combination","setCombination","newGame","setNewGame","random","setRandom","response","setResponse","responseHistory","setResponseHistory","gusses","setGuesses","isMounted","res","current","result","number","data","split","filter","num","key","map","Number","console","log","handleChange","e","newNum","target","value","id","checkIfMatch","preventDefault","includes","Array","from","document","querySelectorAll","forEach","input","compare","num1","num2","samePos","foundNum","i","length","j","allNumbers","game","button","body","numbersBox","x","guessSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\nimport styles from './styles.module.css'\n\n\nconst matermind = () => {\n    const [combination, setCombination] = useState(4)\n    const [newGame, setNewGame] = useState(false);\n    const [random, setRandom] = useState([]);\n    const [response, setResponse] = useState([]);\n    const [responseHistory, setResponseHistory] = useState([]);\n    const [gusses, setGuesses] = useState([]);\n\n    const isMounted = useRef(false);\n    const res = useRef([\"\", \"\",\"\",\"\"]);\n    useEffect( async ()=> {\n        if (isMounted.current){\n            const result = await axios(\n                `https://www.random.org/integers/?num=${combination}&min=0&max=7&col=1&base=10&format=plain&rnd=new`,\n              );\n              let number = result.data.split(\"\").filter((num, key) => key % 2 === 0).map((num) => Number(num));\n              setRandom(number);\n              res.current = [\"\",\"\",\"\",\"\"]\n              setResponse(res.current);\n              setResponseHistory([]);\n              setGuesses([]);\n              setNewGame(false)\n              console.log(random)\n        } else {\n            isMounted.current= true;\n        }\n        \n    },[newGame])\n    \n    \n    const handleChange = (e) => {\n        let newNum = Number(e.target.value);\n        let id = e.target.id;\n        res.current[id] = newNum;  \n        setResponse(res.current);\n        console.log(response)\n\n        \n    }\n\n    const checkIfMatch = (e)=> {\n        e.preventDefault();\n        if (res.current.includes(\"\")) return;\n        setResponseHistory(responseHistory => [...responseHistory, response]);\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n        if (compare(random, response)[0]){\n            console.log(\"You have guessed a current number and its current locartion\")\n        } else if (compare(random, response)[1]) {\n            console.log(\"You have guessed a current number\")\n        } else {\n            console.log(\"Sorry! Your guess isn't correct\")\n        }\n        \n        res.current = res.current.map(num => num = \"\")\n        setResponse(res.current)\n\n    }\n    const compare = (num1, num2) => {\n        let samePos = false;\n        let foundNum = false;\n        for (let i = 0; i<num1.length; i++){\n            for (let j = 0; j<num2.length; j++){\n                if (i === j && num1[i] === num2[j]){\n                    samePos = true;\n                    foundNum = true;\n                } else if (num1[i] === num2[j]) {\n                    foundNum = true;\n                }\n            }\n        }\n        return [samePos,foundNum]\n    }\n    const allNumbers = [0,1,2,3,4,5,6,7]\n    return (<div className={styles.game}>\n    <button className={styles.button} onClick={()=>{setNewGame(true)}}>Start the Game</button>\n    <div className=\"help\">\n        {10 - gusses.length} guesses left\n      </div>\n    <div className={styles.body}>\n        <form className={styles.numbersBox}>\n            {Array.from(Array(combination)).map((x, i) => <input  id ={i} key={i} onChange = {handleChange} className={styles.number} ></input>)}\n\n        </form>\n\n        <button className = {styles.guessSubmit} onClick = {checkIfMatch} >Submit Guess</button>\n    </div>\n    <div></div>\n    {}\n    </div>)\n}\n\nexport default matermind;"]},"metadata":{},"sourceType":"module"}